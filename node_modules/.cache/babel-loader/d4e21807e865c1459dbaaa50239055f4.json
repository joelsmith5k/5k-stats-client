{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joels\\\\OneDrive\\\\Desktop\\\\Projects\\\\5kstats-client\\\\src\\\\components\\\\pgaComponent\\\\playerStatsController\\\\playerStatsController.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport { Listbox, Transition } from \"@headlessui/react\";\nimport { CheckIcon, ChevronUpDownIcon } from \"@heroicons/react/20/solid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction classNames() {\n  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n    classes[_key] = arguments[_key];\n  }\n\n  return classes.filter(Boolean).join(\" \");\n}\n\nfunction PlayerStatsController(_ref) {\n  _s();\n\n  let {\n    players\n  } = _ref;\n  const [selected, setSelected] = useState(items[0]);\n\n  const handleSelect = e => {\n    console.log(e.currentTarget.dataset.rank);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Listbox, {\n    value: selected,\n    onChange: setSelected,\n    children: [/*#__PURE__*/_jsxDEV(Listbox.Button, {\n      children: selected.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Listbox.Options, {\n      children: players.map(player => /*#__PURE__*/_jsxDEV(Listbox.Option, {\n        value: player,\n        children: player.name\n      }, player.rank, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) // <Listbox value={selected} onChange={setSelected}>\n  //   {({ open }) => (\n  //     <>\n  //       <Listbox.Label className=\"block text-sm font-medium leading-6 text-gray-900\">\n  //         Show stats\n  //       </Listbox.Label>\n  //       <div className=\"relative mt-2\">\n  //         <Listbox.Button className=\"relative w-full cursor-default rounded-md bg-white py-1.5 pl-3 pr-10 text-left text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 sm:text-sm sm:leading-6\">\n  //           <span className=\"flex items-center\">\n  //             <span className=\"ml-3 block truncate\">{selected.Rank + '. ' + selected.Name}</span>\n  //           </span>\n  //           <span className=\"pointer-events-none absolute inset-y-0 right-0 ml-3 flex items-center pr-2\">\n  //             <ChevronUpDownIcon\n  //               className=\"h-5 w-5 text-gray-400\"\n  //               aria-hidden=\"true\"\n  //             />\n  //           </span>\n  //         </Listbox.Button>\n  //         <Transition\n  //           show={open}\n  //           as={Fragment}\n  //           leave=\"transition ease-in duration-100\"\n  //           leaveFrom=\"opacity-100\"\n  //           leaveTo=\"opacity-0\"\n  //         >\n  //           <Listbox.Options className=\"absolute z-10 mt-1 max-h-56 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n  //             {items.map((item, index) => (\n  //               <Listbox.Option\n  //                 key={item.Name}\n  //                 data-rank={item.Rank}\n  //                 onClick={handleSelect}\n  //                 className={({ active }) =>\n  //                   classNames(\n  //                     active ? \"bg-indigo-600 text-white\" : \"text-gray-900\",\n  //                     \"relative cursor-default select-none py-2 pl-3 pr-9\"\n  //                   )\n  //                 }\n  //                 value={item}\n  //               >\n  //                 {({ selected, active }) => (\n  //                   <>\n  //                     <div className=\"flex items-center\">\n  //                       <span\n  //                         className={classNames(\n  //                           selected ? \"font-semibold\" : \"font-normal\",\n  //                           \"ml-3 block truncate\"\n  //                         )}\n  //                       >\n  //                         {index++ + \". \" + item.Name}\n  //                       </span>\n  //                     </div>\n  //                     {selected ? (\n  //                       <span\n  //                         className={classNames(\n  //                           active ? \"text-white\" : \"text-indigo-600\",\n  //                           \"absolute inset-y-0 right-0 flex items-center pr-4\"\n  //                         )}\n  //                       >\n  //                         <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n  //                       </span>\n  //                     ) : null}\n  //                   </>\n  //                 )}\n  //               </Listbox.Option>\n  //             ))}\n  //           </Listbox.Options>\n  //         </Transition>\n  //       </div>\n  //     </>\n  //   )}\n  // </Listbox>\n  ;\n}\n\n_s(PlayerStatsController, \"Ompiaat4mrAHG1l/LwV1QT5d8e0=\");\n\n_c = PlayerStatsController;\nexport default PlayerStatsController;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerStatsController\");","map":{"version":3,"sources":["C:/Users/joels/OneDrive/Desktop/Projects/5kstats-client/src/components/pgaComponent/playerStatsController/playerStatsController.js"],"names":["Fragment","useState","Listbox","Transition","CheckIcon","ChevronUpDownIcon","classNames","classes","filter","Boolean","join","PlayerStatsController","players","selected","setSelected","items","handleSelect","e","console","log","currentTarget","dataset","rank","name","map","player"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,mBAApC;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,2BAA7C;;;AAEA,SAASC,UAAT,GAAgC;AAAA,oCAATC,OAAS;AAATA,IAAAA,OAAS;AAAA;;AAC9B,SAAOA,OAAO,CAACC,MAAR,CAAeC,OAAf,EAAwBC,IAAxB,CAA6B,GAA7B,CAAP;AACD;;AAED,SAASC,qBAAT,OAA4C;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACc,KAAK,CAAC,CAAD,CAAN,CAAxC;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,aAAF,CAAgBC,OAAhB,CAAwBC,IAApC;AACD,GAFD;;AAIA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAET,QAAhB;AAA0B,IAAA,QAAQ,EAAEC,WAApC;AAAA,4BACE,QAAC,OAAD,CAAS,MAAT;AAAA,gBAAiBD,QAAQ,CAACU;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD,CAAS,OAAT;AAAA,gBACGX,OAAO,CAACY,GAAR,CAAaC,MAAD,iBACX,QAAC,OAAD,CAAS,MAAT;AAEE,QAAA,KAAK,EAAEA,MAFT;AAAA,kBAIGA,MAAM,CAACF;AAJV,SACOE,MAAM,CAACH,IADd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAcE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtFF;AAwFD;;GA/FQX,qB;;KAAAA,qB;AAiGT,eAAeA,qBAAf","sourcesContent":["import { Fragment, useState } from \"react\";\r\nimport { Listbox, Transition } from \"@headlessui/react\";\r\nimport { CheckIcon, ChevronUpDownIcon } from \"@heroicons/react/20/solid\";\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nfunction PlayerStatsController({ players }) {\r\n  const [selected, setSelected] = useState(items[0]);\r\n\r\n  const handleSelect = (e) => {\r\n    console.log(e.currentTarget.dataset.rank);\r\n  };\r\n\r\n  return (\r\n    <Listbox value={selected} onChange={setSelected}>\r\n      <Listbox.Button>{selected.name}</Listbox.Button>\r\n      <Listbox.Options>\r\n        {players.map((player) => (\r\n          <Listbox.Option\r\n            key={player.rank}\r\n            value={player}\r\n          >\r\n            {player.name}\r\n          </Listbox.Option>\r\n        ))}\r\n      </Listbox.Options>\r\n    </Listbox>\r\n    // <Listbox value={selected} onChange={setSelected}>\r\n    //   {({ open }) => (\r\n    //     <>\r\n    //       <Listbox.Label className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n    //         Show stats\r\n    //       </Listbox.Label>\r\n    //       <div className=\"relative mt-2\">\r\n    //         <Listbox.Button className=\"relative w-full cursor-default rounded-md bg-white py-1.5 pl-3 pr-10 text-left text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 sm:text-sm sm:leading-6\">\r\n    //           <span className=\"flex items-center\">\r\n    //             <span className=\"ml-3 block truncate\">{selected.Rank + '. ' + selected.Name}</span>\r\n    //           </span>\r\n    //           <span className=\"pointer-events-none absolute inset-y-0 right-0 ml-3 flex items-center pr-2\">\r\n    //             <ChevronUpDownIcon\r\n    //               className=\"h-5 w-5 text-gray-400\"\r\n    //               aria-hidden=\"true\"\r\n    //             />\r\n    //           </span>\r\n    //         </Listbox.Button>\r\n\r\n    //         <Transition\r\n    //           show={open}\r\n    //           as={Fragment}\r\n    //           leave=\"transition ease-in duration-100\"\r\n    //           leaveFrom=\"opacity-100\"\r\n    //           leaveTo=\"opacity-0\"\r\n    //         >\r\n    //           <Listbox.Options className=\"absolute z-10 mt-1 max-h-56 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n    //             {items.map((item, index) => (\r\n    //               <Listbox.Option\r\n    //                 key={item.Name}\r\n    //                 data-rank={item.Rank}\r\n    //                 onClick={handleSelect}\r\n    //                 className={({ active }) =>\r\n    //                   classNames(\r\n    //                     active ? \"bg-indigo-600 text-white\" : \"text-gray-900\",\r\n    //                     \"relative cursor-default select-none py-2 pl-3 pr-9\"\r\n    //                   )\r\n    //                 }\r\n    //                 value={item}\r\n    //               >\r\n    //                 {({ selected, active }) => (\r\n    //                   <>\r\n    //                     <div className=\"flex items-center\">\r\n    //                       <span\r\n    //                         className={classNames(\r\n    //                           selected ? \"font-semibold\" : \"font-normal\",\r\n    //                           \"ml-3 block truncate\"\r\n    //                         )}\r\n    //                       >\r\n    //                         {index++ + \". \" + item.Name}\r\n    //                       </span>\r\n    //                     </div>\r\n\r\n    //                     {selected ? (\r\n    //                       <span\r\n    //                         className={classNames(\r\n    //                           active ? \"text-white\" : \"text-indigo-600\",\r\n    //                           \"absolute inset-y-0 right-0 flex items-center pr-4\"\r\n    //                         )}\r\n    //                       >\r\n    //                         <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n    //                       </span>\r\n    //                     ) : null}\r\n    //                   </>\r\n    //                 )}\r\n    //               </Listbox.Option>\r\n    //             ))}\r\n    //           </Listbox.Options>\r\n    //         </Transition>\r\n    //       </div>\r\n    //     </>\r\n    //   )}\r\n    // </Listbox>\r\n  );\r\n}\r\n\r\nexport default PlayerStatsController;\r\n"]},"metadata":{},"sourceType":"module"}